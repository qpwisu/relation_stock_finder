version: '3.1'  # docker-compose 파일 버전

services:
  db:  # 서비스 이름
    image: mysql  # 사용할 이미지
    command: --default-authentication-plugin=mysql_native_password  # MySQL 8.0 이상 사용시 필요한 옵션
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234  # root 비밀번호 설정
      MYSQL_DATABASE: STOCK  # 생성할 데이터베이스 이름
      TZ: Asia/Seoul
      
      # MYSQL_USER: root  # 사용자 이름
      # MYSQL_PASSWORD: 1234  # 사용자 비밀번호
    ports:
      - "3307:3307"  # 포트 매핑 설정
    # depends_on:
    #   - backend
    volumes:
      - ./data:/docker-entrypoint-initdb.d
      - my-db:/var/lib/mysql  # 데이터 볼륨 설정
    container_name: my-mysql-db  # 컨테이너에 명시적으로 이름 지정


    
  backend:
    image: qpwisu/stock-api:latest
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - db
    environment:
      # - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://my-mysql-db:3306/STOCK?useSSL=false&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - cors.allowedOrigins=${SPRING_HOST}
      - TZ=Asia/Seoul

    container_name: my-backend  # 컨테이너에 명시적으로 이름 지정

  crawler:
    image: qpwisu/stock-crawler:latest
    # volumes:
    #   - ./Crawler:/app
    depends_on:
      - backend
    environment:
      - MYSQL_HOST=my-mysql-db
      - MYSQL_PORT=3307
    container_name: my-crawler  # 컨테이너에 명시적으로 이름 지정
    command: tail -f /dev/null # 아무것도 안하고 컨테이너 유지 

  frontend:
    image: qpwisu/stock-react:latest
    depends_on:
      - backend
    restart: always
    environment:
      - REACT_APP_HOST=${REACT_APP_HOST}
      - REACT_APP_PORT=8081
      - TZ=Asia/Seoul
    ports:
      - "3000:3000"
    container_name: my-react

volumes:
  my-db:  # 볼륨 정의

